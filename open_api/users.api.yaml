tags:
  - name: users
    description: User operations

paths:
  /users/register:
    post:
      summary: User Register
      description: Register a user account
      operationId: registerUser
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - address
                - location
                - phone
                - email
                - password
                - role
              properties:
                name:
                  type: string
                  example: Thuan
                address:
                  type: string
                  example: 123 Main St
                location:
                  type: string
                  example: "106.688, 10.762"
                phone:
                  type: string
                  example: 0905123455
                email:
                  type: string
                  example: tranquanthuan132@gmail.com
                password:
                  type: string
                  example: securepassword
                role:
                  type: string
                  example: "admin"
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User registered successfully"
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      refresh_token:
                        type: string
                        example: "eyJhbGciOi..."
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Invalid input data"
                  data: null
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null
  
  /users/login:
    post:
      summary: User Login
      description: Login user
      operationId: loginUser
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: tranquanthuan132@gmail.com
                password:
                  type: string
                  example: securepassword
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User logged in successfully"
                  token:
                    type: string
                    example: "eyJhbGciOi...."
                  data:
                    type: object
                    properties: "#/components/schemas/User"
                      
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Invalid username or password"
                  data: null
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null

  /users/info:
    get:
      summary: Get user information
      description: Get user information
      operationId: getUserInfor
      tags:
        - users
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                type: object
                properties:
                  http:
                    type: number
                    example: 200
                  message:
                    type: string
                    example: "User information retrieved successfully"
                  data:
                    $ref: '#/components/schemas/User'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null

  /users/{id}:
    put:
      summary: Update user by ID
      description: Update the details of a specific user
      operationId: updateUserById
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to update
          schema:
            type: string
            example: "614b1b7754d1f90012345678"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Thuan Updated
                address:
                  type: string
                  example: 456 Main St
                phone:
                  type: string
                  example: 0905123456
                email:
                  type: string
                  example: updatedemail@gmail.com
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User updated successfully"
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Thuan Updated
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null

    delete:
      summary: Delete user by ID
      description: Delete a user by their ID
      operationId: deleteUserById
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to delete
          schema:
            type: string
            example: "614b1b7754d1f90012345678"
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User deleted successfully"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "User not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null
  
  /users/change-password:
    patch:
      summary: Change user password
      description: Change user password
      operationId: changePassword
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                  example: securepassword
                newPassword:
                  type: string
                  example: newsecurepassword
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Password changed successfully"
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Invalid password"
                  data: null
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Internal server error"
                  data: null  
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "614b1b7754d1f90012345678"
        name:
          type: string
          example: Pizza
        address:
          type: string
          example: 123 Main St
        phone:
          type: string
          example: 0905123455
        email:
          type: string
          example: "tranquanthuan132@gmail.com"
        age:
          type: number
          example: 20
        location:
          type: string
          example: "106.688, 10.762"
        gender:
          type: string
          example: "male"
        status:
          type: string
          example: "active"
        expertise:
          type: string
          example: "Pediatrics"
        role:
          type: string
          example: "admin"
        createdAt:
          type: string
          format: date-time
          example: "2024-10-16T12:34:56Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-10-16T12:34:56Z"
